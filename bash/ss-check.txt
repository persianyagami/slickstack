#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: https://mirrors.slickstack.io/bash/ss-check.txt #######################################
#### path: /var/www/ss-check #######################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Retrieves latest ss core cron jobs and ss core bash scripts (except ss-check) ########
#### module version: Ubuntu 20.04 LTS ##############################################################
#### sourced by: ss-install, ss-update, ss core cron jobs ##########################################
#### bash aliases: ss check ########################################################################
####################################################################################################

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### SS-Check: Message (Begin Script) ##############################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
echo -e "${PURPLE}Running ss-check: Retrieves latest ss core cron jobs and ss core bash scripts (except ss-check)... ${NOCOLOR}"
sleep "$SLEEP_MESSAGE_BEGIN"

####################################################################################################
#### SS-Check: Cleanup Temporary Files #############################################################
####################################################################################################

## we briefly cleanup any leftover temporarily files that are relevant to this script ##
## this is performed before and after associated code runs to avoid conflicts ##

## delete tmp files ##
rm /tmp/ss*
rm /tmp/*cron*

####################################################################################################
#### SS-Check: Retrieve SS Core Cron Jobs + SS Core Bash Scripts (Except SS-Check) #################
####################################################################################################

## here we retrieve all the latest ss core cron jobs and bash scripts to keep them updated ##
## this process does not affect ss-config or LEMP modules, nor the ss-check file ##

## retrieve ss core cron jobs ##
wget -O "$TMP_00_CRONTAB" "$MIRROR_00_CRONTAB"
wget -O "$TMP_01_CRON_OFTEN" "$MIRROR_01_CRON_OFTEN"
wget -O "$TMP_02_CRON_REGULAR" "$MIRROR_02_CRON_REGULAR"
wget -O "$TMP_03_CRON_QUARTER_HOURLY" "$MIRROR_03_CRON_QUARTER_HOURLY"
wget -O "$TMP_04_CRON_HALF_HOURLY" "$MIRROR_04_CRON_HALF_HOURLY"
wget -O "$TMP_05_CRON_HOURLY" "$MIRROR_05_CRON_HOURLY"
wget -O "$TMP_06_CRON_QUARTER_DAILY" "$MIRROR_06_CRON_QUARTER_DAILY"
wget -O "$TMP_07_CRON_HALF_DAILY" "$MIRROR_07_CRON_HALF_DAILY"
wget -O "$TMP_08_CRON_DAILY" "$MIRROR_08_CRON_DAILY"
wget -O "$TMP_09_CRON_HALF_WEEKLY" "$MIRROR_09_CRON_HALF_WEEKLY"
wget -O "$TMP_10_CRON_WEEKLY" "$MIRROR_10_CRON_WEEKLY"
wget -O "$TMP_11_CRON_HALF_MONTHLY" "$MIRROR_11_CRON_HALF_MONTHLY"
wget -O "$TMP_12_CRON_MONTHLY" "$MIRROR_12_CRON_MONTHLY"
wget -O "$TMP_13_CRON_SOMETIMES" "$MIRROR_13_CRON_SOMETIMES"

## retrieve ss core bash scripts ##
wget -O "$TMP_SS_CLEAN_DATABASE" "$MIRROR_SS_CLEAN_DATABASE"
wget -O "$TMP_SS_CLEAN_FILES" "$MIRROR_SS_CLEAN_FILES"
wget -O "$TMP_SS_CONFIG_SAMPLE" "$MIRROR_SS_CONFIG_SAMPLE"
wget -O "$TMP_SS_DELETE_DATABASE" "$MIRROR_SS_DELETE_DATABASE"
wget -O "$TMP_SS_DELETE_FILES" "$MIRROR_SS_DELETE_FILES"
wget -O "$TMP_SS_DUMP_DATABASE" "$MIRROR_SS_DUMP_DATABASE"
wget -O "$TMP_SS_DUMP_FILES" "$MIRROR_SS_DUMP_FILES"
wget -O "$TMP_SS_EMPTY_LOGS" "$MIRROR_SS_EMPTY_LOGS"
wget -O "$TMP_SS_ENCRYPT_CERTBOT" "$MIRROR_SS_ENCRYPT_CERTBOT"
wget -O "$TMP_SS_ENCRYPT_OPENSSL" "$MIRROR_SS_ENCRYPT_OPENSSL"
wget -O "$TMP_SS_FUNCTIONS" "$MIRROR_SS_FUNCTIONS"
wget -O "$TMP_SS_IMPORT_DATABASE" "$MIRROR_SS_IMPORT_DATABASE"
wget -O "$TMP_SS_IMPORT_FILES" "$MIRROR_SS_IMPORT_FILES"
wget -O "$TMP_SS_INSTALL" "$MIRROR_SS_INSTALL"
wget -O "$TMP_SS_INSTALL_ADMINER" "$MIRROR_SS_INSTALL_ADMINER"
wget -O "$TMP_SS_INSTALL_CLAMAV" "$MIRROR_SS_INSTALL_CLAMAV"
wget -O "$TMP_SS_INSTALL_CRAFT_CONFIG" "$MIRROR_SS_INSTALL_CRAFT_CONFIG"
wget -O "$TMP_SS_INSTALL_CRAFT_CORE" "$MIRROR_SS_INSTALL_CRAFT_CORE"
wget -O "$TMP_SS_INSTALL_MAGENTO_CONFIG" "$MIRROR_SS_INSTALL_MAGENTO_CONFIG"
wget -O "$TMP_SS_INSTALL_MAGENTO_CORE" "$MIRROR_SS_INSTALL_MAGENTO_CORE"
wget -O "$TMP_SS_INSTALL_MEDIAWIKI_CONFIG" "$MIRROR_SS_INSTALL_MEDIAWIKI_CONFIG"
wget -O "$TMP_SS_INSTALL_MEDIAWIKI_CORE" "$MIRROR_SS_INSTALL_MEDIAWIKI_CORE"
wget -O "$TMP_SS_INSTALL_MOODLE_CONFIG" "$MIRROR_SS_INSTALL_MOODLE_CONFIG"
wget -O "$TMP_SS_INSTALL_MOODLE_CORE" "$MIRROR_SS_INSTALL_MOODLE_CORE"
wget -O "$TMP_SS_INSTALL_MYSQL_CONFIG" "$MIRROR_SS_INSTALL_MYSQL_CONFIG"
wget -O "$TMP_SS_INSTALL_MYSQL_PACKAGES" "$MIRROR_SS_INSTALL_MYSQL_PACKAGES"
wget -O "$TMP_SS_INSTALL_NGINX_CONFIG" "$MIRROR_SS_INSTALL_NGINX_CONFIG"
wget -O "$TMP_SS_INSTALL_NGINX_LETSENCRYPT" "$MIRROR_SS_INSTALL_NGINX_LETSENCRYPT"
wget -O "$TMP_SS_INSTALL_NGINX_OPENSSL" "$MIRROR_SS_INSTALL_NGINX_OPENSSL"
wget -O "$TMP_SS_INSTALL_NGINX_PACKAGES" "$MIRROR_SS_INSTALL_NGINX_PACKAGES"
wget -O "$TMP_SS_INSTALL_NGINX_SSL" "$MIRROR_SS_INSTALL_NGINX_SSL"
wget -O "$TMP_SS_INSTALL_OPENCART_CONFIG" "$MIRROR_SS_INSTALL_OPENCART_CONFIG"
wget -O "$TMP_SS_INSTALL_OPENCART_CORE" "$MIRROR_SS_INSTALL_OPENCART_CORE"
wget -O "$TMP_SS_INSTALL_PHP_CONFIG" "$MIRROR_SS_INSTALL_PHP_CONFIG"
wget -O "$TMP_SS_INSTALL_PHP_PACKAGES" "$MIRROR_SS_INSTALL_PHP_PACKAGES"
wget -O "$TMP_SS_INSTALL_PRESTASHOP_CONFIG" "$MIRROR_SS_INSTALL_PRESTASHOP_CONFIG"
wget -O "$TMP_SS_INSTALL_PRESTASHOP_CORE" "$MIRROR_SS_INSTALL_PRESTASHOP_CORE"
wget -O "$TMP_SS_INSTALL_REDIS_CONFIG" "$MIRROR_SS_INSTALL_REDIS_CONFIG"
wget -O "$TMP_SS_INSTALL_REDIS_PACKAGES" "$MIRROR_SS_INSTALL_REDIS_PACKAGES"
wget -O "$TMP_SS_INSTALL_UBUNTU_BASH" "$MIRROR_SS_INSTALL_UBUNTU_BASH"
wget -O "$TMP_SS_INSTALL_UBUNTU_CRONTAB" "$MIRROR_SS_INSTALL_UBUNTU_CRONTAB"
wget -O "$TMP_SS_INSTALL_UBUNTU_KERNEL" "$MIRROR_SS_INSTALL_UBUNTU_KERNEL"
wget -O "$TMP_SS_INSTALL_UBUNTU_SSH" "$MIRROR_SS_INSTALL_UBUNTU_SSH"
wget -O "$TMP_SS_INSTALL_UBUNTU_SWAPFILE" "$MIRROR_SS_INSTALL_UBUNTU_SWAPFILE"
wget -O "$TMP_SS_INSTALL_UBUNTU_USERS" "$MIRROR_SS_INSTALL_UBUNTU_USERS"
wget -O "$TMP_SS_INSTALL_UBUNTU_UTILS" "$MIRROR_SS_INSTALL_UBUNTU_UTILS"
wget -O "$TMP_SS_INSTALL_UFW_CONFIG" "$MIRROR_SS_INSTALL_UFW_CONFIG"
wget -O "$TMP_SS_INSTALL_UFW_PACKAGES" "$MIRROR_SS_INSTALL_UFW_PACKAGES"
wget -O "$TMP_SS_INSTALL_WORDPRESS_CLI" "$MIRROR_SS_INSTALL_WORDPRESS_CLI"
wget -O "$TMP_SS_INSTALL_WORDPRESS_CONFIG" "$MIRROR_SS_INSTALL_WORDPRESS_CONFIG"
wget -O "$TMP_SS_INSTALL_WORDPRESS_CORE" "$MIRROR_SS_INSTALL_WORDPRESS_CORE"
wget -O "$TMP_SS_INSTALL_WORDPRESS_MU_PLUGINS" "$MIRROR_SS_INSTALL_WORDPRESS_MU_PLUGINS"
wget -O "$TMP_SS_MAINTENANCE_DISABLE" "$MIRROR_SS_MAINTENANCE_DISABLE"
wget -O "$TMP_SS_MAINTENANCE_ENABLE" "$MIRROR_SS_MAINTENANCE_ENABLE"
wget -O "$TMP_SS_MONITOR_RESOURCES" "$MIRROR_SS_MONITOR_RESOURCES"
wget -O "$TMP_SS_OPTIMIZE_FILES" "$MIRROR_SS_OPTIMIZE_FILES"
wget -O "$TMP_SS_OPTIMIZE_DATABASE" "$MIRROR_SS_OPTIMIZE_DATABASE"
wget -O "$TMP_SS_PERMS" "$MIRROR_SS_PERMS"
wget -O "$TMP_SS_PERMS_ADMINER" "$MIRROR_SS_PERMS_ADMINER"
wget -O "$TMP_SS_PERMS_CLAMAV" "$MIRROR_SS_PERMS_CLAMAV"
wget -O "$TMP_SS_PERMS_CRAFT_CONFIG" "$MIRROR_SS_PERMS_CRAFT_CONFIG"
wget -O "$TMP_SS_PERMS_CRAFT_CORE" "$MIRROR_SS_PERMS_CRAFT_CORE"
wget -O "$TMP_SS_PERMS_MAGENTO_CONFIG" "$MIRROR_SS_PERMS_MAGENTO_CONFIG"
wget -O "$TMP_SS_PERMS_MAGENTO_CORE" "$MIRROR_SS_PERMS_MAGENTO_CORE"
wget -O "$TMP_SS_PERMS_MEDIAWIKI_CONFIG" "$MIRROR_SS_PERMS_MEDIAWIKI_CONFIG"
wget -O "$TMP_SS_PERMS_MEDIAWIKI_CORE" "$MIRROR_SS_PERMS_MEDIAWIKI_CORE"
wget -O "$TMP_SS_PERMS_MOODLE_CONFIG" "$MIRROR_SS_PERMS_MOODLE_CONFIG"
wget -O "$TMP_SS_PERMS_MOODLE_CORE" "$MIRROR_SS_PERMS_MOODLE_CORE"
wget -O "$TMP_SS_PERMS_MYSQL_CONFIG" "$MIRROR_SS_PERMS_MYSQL_CONFIG"
wget -O "$TMP_SS_PERMS_MYSQL_PACKAGES" "$MIRROR_SS_PERMS_MYSQL_PACKAGES"
wget -O "$TMP_SS_PERMS_NGINX_CONFIG" "$MIRROR_SS_PERMS_NGINX_CONFIG"
wget -O "$TMP_SS_PERMS_NGINX_PACKAGES" "$MIRROR_SS_PERMS_NGINX_PACKAGES"
wget -O "$TMP_SS_PERMS_NGINX_SSL" "$MIRROR_SS_PERMS_NGINX_SSL"
wget -O "$TMP_SS_PERMS_OPENCART_CONFIG" "$MIRROR_SS_PERMS_OPENCART_CONFIG"
wget -O "$TMP_SS_PERMS_OPENCART_CORE" "$MIRROR_SS_PERMS_OPENCART_CORE"
wget -O "$TMP_SS_PERMS_PHP_CONFIG" "$MIRROR_SS_PERMS_PHP_CONFIG"
wget -O "$TMP_SS_PERMS_PHP_PACKAGES" "$MIRROR_SS_PERMS_PHP_PACKAGES"
wget -O "$TMP_SS_PERMS_PRESTASHOP_CONFIG" "$MIRROR_SS_PERMS_PRESTASHOP_CONFIG"
wget -O "$TMP_SS_PERMS_PRESTASHOP_CORE" "$MIRROR_SS_PERMS_PRESTASHOP_CORE"
wget -O "$TMP_SS_PERMS_REDIS_CONFIG" "$MIRROR_SS_PERMS_REDIS_CONFIG"
wget -O "$TMP_SS_PERMS_REDIS_PACKAGES" "$MIRROR_SS_PERMS_REDIS_PACKAGES"
wget -O "$TMP_SS_PERMS_UBUNTU_BASH" "$MIRROR_SS_PERMS_UBUNTU_BASH"
wget -O "$TMP_SS_PERMS_UBUNTU_CRONTAB" "$MIRROR_SS_PERMS_UBUNTU_CRONTAB"
wget -O "$TMP_SS_PERMS_UBUNTU_KERNEL" "$MIRROR_SS_PERMS_UBUNTU_KERNEL"
wget -O "$TMP_SS_PERMS_UBUNTU_SSH" "$MIRROR_SS_PERMS_UBUNTU_SSH"
wget -O "$TMP_SS_PERMS_UBUNTU_SWAPFILE" "$MIRROR_SS_PERMS_UBUNTU_SWAPFILE"
wget -O "$TMP_SS_PERMS_UBUNTU_USERS" "$MIRROR_SS_PERMS_UBUNTU_USERS"
wget -O "$TMP_SS_PERMS_UBUNTU_UTILS" "$MIRROR_SS_PERMS_UBUNTU_UTILS"
wget -O "$TMP_SS_PERMS_UFW_CONFIG" "$MIRROR_SS_PERMS_UFW_CONFIG"
wget -O "$TMP_SS_PERMS_UFW_PACKAGES" "$MIRROR_SS_PERMS_UFW_PACKAGES"
wget -O "$TMP_SS_PERMS_WORDPRESS_CLI" "$MIRROR_SS_PERMS_WORDPRESS_CLI"
wget -O "$TMP_SS_PERMS_WORDPRESS_CONFIG" "$MIRROR_SS_PERMS_WORDPRESS_CONFIG"
wget -O "$TMP_SS_PERMS_WORDPRESS_CORE" "$MIRROR_SS_PERMS_WORDPRESS_CORE"
wget -O "$TMP_SS_PERMS_WORDPRESS_MU_PLUGINS" "$MIRROR_SS_PERMS_WORDPRESS_MU_PLUGINS"
wget -O "$TMP_SS_PURGE_NGINX" "$MIRROR_SS_PURGE_NGINX"
wget -O "$TMP_SS_PURGE_OPCACHE" "$MIRROR_SS_PURGE_OPCACHE"
wget -O "$TMP_SS_PURGE_REDIS" "$MIRROR_SS_PURGE_REDIS"
wget -O "$TMP_SS_PURGE_TRANSIENTS" "$MIRROR_SS_PURGE_TRANSIENTS"
wget -O "$TMP_SS_REBOOT_MACHINE" "$MIRROR_SS_REBOOT_MACHINE"
wget -O "$TMP_SS_REMOTE_BACKUP" "$MIRROR_SS_REMOTE_BACKUP"
wget -O "$TMP_SS_RESET_PASSWORD_SFTP" "$MIRROR_SS_RESET_PASSWORD_SFTP"
wget -O "$TMP_SS_RESTART_MYSQL" "$MIRROR_SS_RESTART_MYSQL"
wget -O "$TMP_SS_RESTART_NGINX" "$MIRROR_SS_RESTART_NGINX"
wget -O "$TMP_SS_RESTART_PHP" "$MIRROR_SS_RESTART_PHP"
wget -O "$TMP_SS_RESTART_REDIS" "$MIRROR_SS_RESTART_REDIS"
wget -O "$TMP_SS_RESTART_UFW" "$MIRROR_SS_RESTART_UFW"
wget -O "$TMP_SS_SCAN_MALWARE" "$MIRROR_SS_SCAN_MALWARE"
wget -O "$TMP_SS_STACK_OVERVIEW" "$MIRROR_SS_STACK_OVERVIEW"
wget -O "$TMP_SS_SYNC_STAGING" "$MIRROR_SS_SYNC_STAGING"
wget -O "$TMP_SS_UPDATE_CONFIG" "$MIRROR_SS_UPDATE_CONFIG"
wget -O "$TMP_SS_UPDATE_MODULES" "$MIRROR_SS_UPDATE_MODULES"
wget -O "$TMP_SS_WORKER" "$MIRROR_SS_WORKER"

####################################################################################################
#### SS-Check: Install SS Core Cron Jobs + SS Core Bash Scripts (Except SS-Check) ##################
####################################################################################################

## here we copy all the downloaded core files to the proper folders where they remain ##
## the root crontab runs the core cron jobs which in turn run the bash scripts ##

## install ss core cron jobs ##
cp "$TMP_00_CRONTAB" "$PATH_00_CRONTAB"
cp "$TMP_01_CRON_OFTEN" "$PATH_01_CRON_OFTEN"
cp "$TMP_02_CRON_REGULAR" "$PATH_02_CRON_REGULAR"
cp "$TMP_03_CRON_QUARTER_HOURLY" "$PATH_03_CRON_QUARTER_HOURLY"
cp "$TMP_04_CRON_HALF_HOURLY" "$PATH_04_CRON_HALF_HOURLY"
cp "$TMP_05_CRON_HOURLY" "$PATH_05_CRON_HOURLY"
cp "$TMP_06_CRON_QUARTER_DAILY" "$PATH_06_CRON_QUARTER_DAILY"
cp "$TMP_07_CRON_HALF_DAILY" "$PATH_07_CRON_HALF_DAILY"
cp "$TMP_08_CRON_DAILY" "$PATH_08_CRON_DAILY"
cp "$TMP_09_CRON_HALF_WEEKLY" "$PATH_09_CRON_HALF_WEEKLY"
cp "$TMP_10_CRON_WEEKLY" "$PATH_10_CRON_WEEKLY"
cp "$TMP_11_CRON_HALF_MONTHLY" "$PATH_11_CRON_HALF_MONTHLY"
cp "$TMP_12_CRON_MONTHLY" "$PATH_12_CRON_MONTHLY"
cp "$TMP_13_CRON_SOMETIMES" "$PATH_13_CRON_SOMETIMES"

## install ss core bash scripts ##
cp "$TMP_SS_CLEAN_DATABASE" "$PATH_SS_CLEAN_DATABASE"
cp "$TMP_SS_CLEAN_FILES" "$PATH_SS_CLEAN_FILES"
cp "$TMP_SS_CONFIG_SAMPLE" "$PATH_SS_CONFIG_SAMPLE"
cp "$TMP_SS_DELETE_DATABASE" "$PATH_SS_DELETE_DATABASE"
cp "$TMP_SS_DELETE_FILES" "$PATH_SS_DELETE_FILES"
cp "$TMP_SS_DUMP_DATABASE" "$PATH_SS_DUMP_DATABASE"
cp "$TMP_SS_DUMP_FILES" "$PATH_SS_DUMP_FILES"
cp "$TMP_SS_EMPTY_LOGS" "$PATH_SS_EMPTY_LOGS"
cp "$TMP_SS_ENCRYPT_CERTBOT" "$PATH_SS_ENCRYPT_CERTBOT"
cp "$TMP_SS_ENCRYPT_OPENSSL" "$PATH_SS_ENCRYPT_OPENSSL"
cp "$TMP_SS_FUNCTIONS" "$PATH_SS_FUNCTIONS"
cp "$TMP_SS_IMPORT_DATABASE" "$PATH_SS_IMPORT_DATABASE"
cp "$TMP_SS_IMPORT_FILES" "$PATH_SS_IMPORT_FILES"
cp "$TMP_SS_INSTALL" "$PATH_SS_INSTALL"
cp "$TMP_SS_INSTALL_ADMINER" "$PATH_SS_INSTALL_ADMINER"
cp "$TMP_SS_INSTALL_CLAMAV" "$PATH_SS_INSTALL_CLAMAV"
cp "$TMP_SS_INSTALL_CRAFT_CONFIG" "$PATH_SS_INSTALL_CRAFT_CONFIG"
cp "$TMP_SS_INSTALL_CRAFT_CORE" "$PATH_SS_INSTALL_CRAFT_CORE"
cp "$TMP_SS_INSTALL_MAGENTO_CONFIG" "$PATH_SS_INSTALL_MAGENTO_CONFIG"
cp "$TMP_SS_INSTALL_MAGENTO_CORE" "$PATH_SS_INSTALL_MAGENTO_CORE"
cp "$TMP_SS_INSTALL_MEDIAWIKI_CONFIG" "$PATH_SS_INSTALL_MEDIAWIKI_CONFIG"
cp "$TMP_SS_INSTALL_MEDIAWIKI_CORE" "$PATH_SS_INSTALL_MEDIAWIKI_CORE"
cp "$TMP_SS_INSTALL_MOODLE_CONFIG" "$PATH_SS_INSTALL_MOODLE_CONFIG"
cp "$TMP_SS_INSTALL_MOODLE_CORE" "$PATH_SS_INSTALL_MOODLE_CORE"
cp "$TMP_SS_INSTALL_MYSQL_CONFIG" "$PATH_SS_INSTALL_MYSQL_CONFIG"
cp "$TMP_SS_INSTALL_MYSQL_PACKAGES" "$PATH_SS_INSTALL_MYSQL_PACKAGES"
cp "$TMP_SS_INSTALL_NGINX_CONFIG" "$PATH_SS_INSTALL_NGINX_CONFIG"
cp "$TMP_SS_INSTALL_NGINX_LETSENCRYPT" "$PATH_SS_INSTALL_NGINX_LETSENCRYPT"
cp "$TMP_SS_INSTALL_NGINX_OPENSSL" "$PATH_SS_INSTALL_NGINX_OPENSSL"
cp "$TMP_SS_INSTALL_NGINX_PACKAGES" "$PATH_SS_INSTALL_NGINX_PACKAGES"
cp "$TMP_SS_INSTALL_NGINX_SSL" "$PATH_SS_INSTALL_NGINX_SSL"
cp "$TMP_SS_INSTALL_OPENCART_CONFIG" "$PATH_SS_INSTALL_OPENCART_CONFIG"
cp "$TMP_SS_INSTALL_OPENCART_CORE" "$PATH_SS_INSTALL_OPENCART_CORE"
cp "$TMP_SS_INSTALL_PHP_CONFIG" "$PATH_SS_INSTALL_PHP_CONFIG"
cp "$TMP_SS_INSTALL_PHP_PACKAGES" "$PATH_SS_INSTALL_PHP_PACKAGES"
cp "$TMP_SS_INSTALL_PRESTASHOP_CONFIG" "$PATH_SS_INSTALL_PRESTASHOP_CONFIG"
cp "$TMP_SS_INSTALL_PRESTASHOP_CORE" "$PATH_SS_INSTALL_PRESTASHOP_CORE"
cp "$TMP_SS_INSTALL_REDIS_CONFIG" "$PATH_SS_INSTALL_REDIS_CONFIG"
cp "$TMP_SS_INSTALL_REDIS_PACKAGES" "$PATH_SS_INSTALL_REDIS_PACKAGES"
cp "$TMP_SS_INSTALL_UBUNTU_BASH" "$PATH_SS_INSTALL_UBUNTU_BASH"
cp "$TMP_SS_INSTALL_UBUNTU_CRONTAB" "$PATH_SS_INSTALL_UBUNTU_CRONTAB"
cp "$TMP_SS_INSTALL_UBUNTU_KERNEL" "$PATH_SS_INSTALL_UBUNTU_KERNEL"
cp "$TMP_SS_INSTALL_UBUNTU_SSH" "$PATH_SS_INSTALL_UBUNTU_SSH"
cp "$TMP_SS_INSTALL_UBUNTU_SWAPFILE" "$PATH_SS_INSTALL_UBUNTU_SWAPFILE"
cp "$TMP_SS_INSTALL_UBUNTU_USERS" "$PATH_SS_INSTALL_UBUNTU_USERS"
cp "$TMP_SS_INSTALL_UBUNTU_UTILS" "$PATH_SS_INSTALL_UBUNTU_UTILS"
cp "$TMP_SS_INSTALL_UFW_CONFIG" "$PATH_SS_INSTALL_UFW_CONFIG"
cp "$TMP_SS_INSTALL_UFW_PACKAGES" "$PATH_SS_INSTALL_UFW_PACKAGES"
cp "$TMP_SS_INSTALL_WORDPRESS_CLI" "$PATH_SS_INSTALL_WORDPRESS_CLI"
cp "$TMP_SS_INSTALL_WORDPRESS_CONFIG" "$PATH_SS_INSTALL_WORDPRESS_CONFIG"
cp "$TMP_SS_INSTALL_WORDPRESS_CORE" "$PATH_SS_INSTALL_WORDPRESS_CORE"
cp "$TMP_SS_INSTALL_WORDPRESS_MU_PLUGINS" "$PATH_SS_INSTALL_WORDPRESS_MU_PLUGINS"
cp "$TMP_SS_MAINTENANCE_DISABLE" "$PATH_SS_MAINTENANCE_DISABLE"
cp "$TMP_SS_MAINTENANCE_ENABLE" "$PATH_SS_MAINTENANCE_ENABLE"
cp "$TMP_SS_MONITOR_RESOURCES" "$PATH_SS_MONITOR_RESOURCES"
cp "$TMP_SS_OPTIMIZE_DATABASE" "$PATH_SS_OPTIMIZE_DATABASE"
cp "$TMP_SS_OPTIMIZE_FILES" "$PATH_SS_OPTIMIZE_FILES"
cp "$TMP_SS_OVERVIEW" "$PATH_SS_OVERVIEW"
cp "$TMP_SS_PERMS" "$PATH_SS_PERMS"
cp "$TMP_SS_PERMS_ADMINER" "$PATH_SS_PERMS_ADMINER"
cp "$TMP_SS_PERMS_CLAMAV" "$PATH_SS_PERMS_CLAMAV"
cp "$TMP_SS_PERMS_CRAFT_CONFIG" "$PATH_SS_PERMS_CRAFT_CONFIG"
cp "$TMP_SS_PERMS_CRAFT_CORE" "$PATH_SS_PERMS_CRAFT_CORE"
cp "$TMP_SS_PERMS_MAGENTO_CONFIG" "$PATH_SS_PERMS_MAGENTO_CONFIG"
cp "$TMP_SS_PERMS_MAGENTO_CORE" "$PATH_SS_PERMS_MAGENTO_CORE"
cp "$TMP_SS_PERMS_MEDIAWIKI_CONFIG" "$PATH_SS_PERMS_MEDIAWIKI_CONFIG"
cp "$TMP_SS_PERMS_MEDIAWIKI_CORE" "$PATH_SS_PERMS_MEDIAWIKI_CORE"
cp "$TMP_SS_PERMS_MOODLE_CONFIG" "$PATH_SS_PERMS_MOODLE_CONFIG"
cp "$TMP_SS_PERMS_MOODLE_CORE" "$PATH_SS_PERMS_MOODLE_CORE"
cp "$TMP_SS_PERMS_MYSQL_CONFIG" "$PATH_SS_PERMS_MYSQL_CONFIG"
cp "$TMP_SS_PERMS_MYSQL_PACKAGES" "$PATH_SS_PERMS_MYSQL_PACKAGES"
cp "$TMP_SS_PERMS_NGINX_CONFIG" "$PATH_SS_PERMS_NGINX_CONFIG"
cp "$TMP_SS_PERMS_NGINX_PACKAGES" "$PATH_SS_PERMS_NGINX_PACKAGES"
cp "$TMP_SS_PERMS_NGINX_SSL" "$PATH_SS_PERMS_NGINX_SSL"
cp "$TMP_SS_PERMS_OPENCART_CONFIG" "$PATH_SS_PERMS_OPENCART_CONFIG"
cp "$TMP_SS_PERMS_OPENCART_CORE" "$PATH_SS_PERMS_OPENCART_CORE"
cp "$TMP_SS_PERMS_PHP_CONFIG" "$PATH_SS_PERMS_PHP_CONFIG"
cp "$TMP_SS_PERMS_PHP_PACKAGES" "$PATH_SS_PERMS_PHP_PACKAGES"
cp "$TMP_SS_PERMS_PRESTASHOP_CONFIG" "$PATH_SS_PERMS_PRESTASHOP_CONFIG"
cp "$TMP_SS_PERMS_PRESTASHOP_CORE" "$PATH_SS_PERMS_PRESTASHOP_CORE"
cp "$TMP_SS_PERMS_REDIS_CONFIG" "$PATH_SS_PERMS_REDIS_CONFIG"
cp "$TMP_SS_PERMS_REDIS_PACKAGES" "$PATH_SS_PERMS_REDIS_PACKAGES"
cp "$TMP_SS_PERMS_UBUNTU_BASH" "$PATH_SS_PERMS_UBUNTU_BASH"
cp "$TMP_SS_PERMS_UBUNTU_CRONTAB" "$PATH_SS_PERMS_UBUNTU_CRONTAB"
cp "$TMP_SS_PERMS_UBUNTU_KERNEL" "$PATH_SS_PERMS_UBUNTU_KERNEL"
cp "$TMP_SS_PERMS_UBUNTU_SSH" "$PATH_SS_PERMS_UBUNTU_SSH"
cp "$TMP_SS_PERMS_UBUNTU_SWAPFILE" "$PATH_SS_PERMS_UBUNTU_SWAPFILE"
cp "$TMP_SS_PERMS_UBUNTU_USERS" "$PATH_SS_PERMS_UBUNTU_USERS"
cp "$TMP_SS_PERMS_UBUNTU_UTILS" "$PATH_SS_PERMS_UBUNTU_UTILS"
cp "$TMP_SS_PERMS_UFW_CONFIG" "$PATH_SS_PERMS_UFW_CONFIG"
cp "$TMP_SS_PERMS_UFW_PACKAGES" "$PATH_SS_PERMS_UFW_PACKAGES"
cp "$TMP_SS_PERMS_WORDPRESS_CLI" "$PATH_SS_PERMS_WORDPRESS_CLI"
cp "$TMP_SS_PERMS_WORDPRESS_CONFIG" "$PATH_SS_PERMS_WORDPRESS_CONFIG"
cp "$TMP_SS_PERMS_WORDPRESS_CORE" "$PATH_SS_PERMS_WORDPRESS_CORE"
cp "$TMP_SS_PERMS_WORDPRESS_MU_PLUGINS" "$PATH_SS_PERMS_WORDPRESS_MU_PLUGINS"
cp "$TMP_SS_PURGE_NGINX" "$PATH_SS_PURGE_NGINX"
cp "$TMP_SS_PURGE_OPCACHE" "$PATH_SS_PURGE_OPCACHE"
cp "$TMP_SS_PURGE_REDIS" "$PATH_SS_PURGE_REDIS"
cp "$TMP_SS_PURGE_TRANSIENTS" "$PATH_SS_PURGE_TRANSIENTS"
cp "$TMP_SS_REBOOT_MACHINE" "$PATH_SS_REBOOT_MACHINE"
cp "$TMP_SS_REMOTE" "$PATH_SS_REMOTE"
cp "$TMP_SS_RESET_PASSWORD_SFTP" "$PATH_SS_RESET_PASSWORD_SFTP"
cp "$TMP_SS_RESTART_MYSQL" "$PATH_SS_RESTART_MYSQL"
cp "$TMP_SS_RESTART_NGINX" "$PATH_SS_RESTART_NGINX"
cp "$TMP_SS_RESTART_PHP" "$PATH_SS_RESTART_PHP"
cp "$TMP_SS_RESTART_REDIS" "$PATH_SS_RESTART_REDIS"
cp "$TMP_SS_RESTART_UFW" "$PATH_SS_RESTART_UFW"
cp "$TMP_SS_SCAN_MALWARE" "$PATH_SS_SCAN_MALWARE"
cp "$TMP_SS_SYNC_STAGING" "$PATH_SS_SYNC_STAGING"
cp "$TMP_SS_UPDATE_CONFIG" "$PATH_SS_UPDATE_CONFIG"
cp "$TMP_SS_UPDATE_MODULES" "$PATH_SS_UPDATE_MODULES"
cp "$TMP_SS_WORKER" "$PATH_SS_WORKER"

####################################################################################################
#### SS-Check: Reset Permissions (SlickStack Core) #################################################
####################################################################################################

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS ##

## SNIPPET: ss-check, ss-worker, ss core cron jobs

## we hardcode this permissions reset snippet into all ss core scripts for redundancy ##
## this ensures permissions are regularly fixed without requiring dependencies ##

## make directories ##
mkdir /var/www
mkdir /var/www/backups
mkdir /var/www/backups/config
mkdir /var/www/backups/html
mkdir /var/www/backups/mysql
mkdir /var/www/backups/mysql/data
mkdir /var/www/cache
mkdir /var/www/cache/nginx
mkdir /var/www/cache/opcache
mkdir /var/www/cache/system
mkdir /var/www/certs
mkdir /var/www/certs/keys
mkdir /var/www/crons
mkdir /var/www/crons/custom
mkdir /var/www/html
mkdir /var/www/html/.well-known
mkdir /var/www/html/.well-known/acme-challenge
mkdir /var/www/logs
mkdir /var/www/meta
mkdir /var/www/meta/timestamps
mkdir /var/www/sites

## if staging enabled
if [[ "$STAGING_SITE" != "false" ]]; then 
    mkdir /var/www/html/staging/.well-known
    mkdir /var/www/html/staging/.well-known/acme-challenge
    chown -R "${SFTP_USER}":www-data /var/www/html/staging/.well-known ## accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
    chown -R "${SFTP_USER}":www-data /var/www/html/staging/.well-known/acme-challenge ## accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
fi

## user/group ownership ##
chown root:root /var/www ## must be root:root
chown root:root /var/www/backups ## must be root:root
chown root:root /var/www/backups/config ## must be root:root
chown root:root /var/www/backups/mysql ## must be root:root
chown root:root /var/www/backups/mysql/data ## must be root:root
chown www-data:www-data /var/www/cache ## must be www-data:www-data
chown www-data:www-data /var/www/cache/nginx ## must be www-data:www-data
chown www-data:www-data /var/www/cache/opcache ## must be www-data:www-data
chown root:root /var/www/cache/system ## must be root:root
chown root:root /var/www/certs ## must be root:root
chown root:root /var/www/certs/keys ## must be root:root
chown root:root /var/www/crons ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chown root:root /var/www/crons/custom ## must be root:root
chown root:root /var/www/crons/custom/*cron* ## must be root:root
chown -R "${SFTP_USER}":www-data /var/www/html/.well-known ## accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
chown -R "${SFTP_USER}":www-data /var/www/html/.well-known/acme-challenge ## accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
chown www-data:www-data /var/www/logs ## must be www-data:www-data
chown www-data:www-data /var/www/meta ## must be www-data:www-data
chown www-data:www-data /var/www/meta/ss-constants.php ## must be www-data:www-data
chown root:root /var/www/ss* ## must be root:root

## linux permissions ##
chmod 0755 /var/www ## must be 0755
chmod 0775 /var/www/cache ## 6755 should also work
chmod 0755 /var/www/cache/opcache ## 755 should also work
chmod 0755 /var/www/certs ## must be 0755
chmod 0700 /var/www/certs/keys ## must be 0700
chmod 0644 /var/www/certs/*.crt ## must be 0644
chmod 0644 /var/www/certs/*.pem ## must be 0644
chmod 0600 /var/www/certs/keys/*.key ## must be 0600
chmod 0600 /var/www/certs/keys/*.pem ## must be 0600
chmod 0755 /var/www/crons ## must be 0755
chmod 0700 /var/www/crons/*cron* ## 0700 means only root can execute
chmod 0755 /var/www/crons/custom ## must be 0755
chmod 0700 /var/www/crons/custom/*cron* ## 0700 means only root can execute
chmod 0755 /var/www/html/.well-known ## accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
chmod 0775 /var/www/logs ## 6755 should also work
chmod 0775 /var/www/meta ## 6755 should also work
chmod 0440 /var/www/meta/ss-constants.php
chmod 0700 /var/www/ss* ## 0700 means only root can execute

####################################################################################################
#### SS-Check: Cleanup Temporary Files #############################################################
####################################################################################################

## we briefly cleanup any leftover temporarily files that are relevant to this script ##
## this is performed before and after associated code runs to avoid conflicts ##

## delete tmp files ##
rm /tmp/ss*
rm /tmp/*cron*

####################################################################################################
#### SS-Check: Touch Timestamp File (End Script) ###################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch "$TIMESTAMP_SS_CHECK"

####################################################################################################
#### SS-Check: Message (End Script) ################################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
echo -e "${PURPLE}Exiting ss-check: It appears we successfully retrieved latest ss core cron jobs and bash scripts... ${NOCOLOR}"

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://linuxize.com/post/bash-functions/
## Ref: https://stackoverflow.com/questions/6366530/bash-syntax-error-unexpected-end-of-file

## SS_EOF
